class Zeek < Formula
  desc "Network security monitor"
  homepage "https://www.zeek.org"
  url "https://github.com/zeek/zeek.git",
      tag:      "v4.0.0",
      revision: "7b5263139e9909757c38dfca4c99abebf958df67"
  license "BSD-3-Clause"
  revision 3
  head "https://github.com/zeek/zeek.git"

  bottle do
    sha256 arm64_big_sur: "2da21fcb3ca181e6d9a5eab0da9f11167670c1a48519b357a83de4d3581cedad"
    sha256 big_sur:       "64523156d14d219b5bbcaadf53a25049543e37cf19da44d757c90f7dc8c8955b"
    sha256 catalina:      "01db400b0f88149a80e16399ccbc8bf663a63044e2aa3218b8e602e848f64c3c"
    sha256 mojave:        "3cea14ff2d54a633f84a33eabfd71e10a720992a49242a22ccb22130650b6733"
  end

  depends_on "bison" => :build
  depends_on "cmake" => :build
  depends_on "swig" => :build
  depends_on "caf"
  depends_on "geoip"
  depends_on "libmaxminddb"
  depends_on macos: :mojave
  depends_on "openssl@1.1"
  depends_on "python@3.9"

  uses_from_macos "flex"
  uses_from_macos "libpcap"

  def install
    mkdir "build" do
      system "cmake", "..", *std_cmake_args,
                      "-DBROKER_DISABLE_TESTS=on",
                      "-DBUILD_SHARED_LIBS=on",
                      "-DINSTALL_AUX_TOOLS=on",
                      "-DINSTALL_ZEEKCTL=on",
                      "-DUSE_GEOIP=on",
                      "-DCAF_ROOT=#{Formula["caf"].opt_prefix}",
                      "-DOPENSSL_ROOT_DIR=#{Formula["openssl@1.1"].opt_prefix}",
                      "-DZEEK_ETC_INSTALL_DIR=#{etc}",
                      "-DZEEK_LOCAL_STATE_DIR=#{var}"
      system "make", "install"
    end
  end

  test do
    assert_match "version #{version}", shell_output("#{bin}/zeek --version")
    assert_match "ARP packet analyzer", shell_output("#{bin}/zeek --print-plugins")
    base64_input = <<~EOS
      Cg0NCsQAAABNPCsaAQAAAP//////////AgA2AEludGVsKFIpIENvcmUoVE0pIGk3LTg4NTBIIENQVSBAIDIuNjBHSHogKHdpdGggU1NFNC4yKQAAAwArAE1hYyBPUyBYIDEwLjE2LCBidWlsZCAyMEQ2NCAoRGFyd2luIDIwLjMuMCkABAAyAER1bXBjYXAgKFdpcmVzaGFyaykgMy40LjMgKHYzLjQuMy0wLWc2YWU2Y2QzMzVhYTkpAAAAAAAAxAAAAAEAAABkAAAAAQAAAAAACAACAAMAZW4wAAMABQBXaS1GaQAAAAkAAQAGAAAADAArAE1hYyBPUyBYIDEwLjE2LCBidWlsZCAyMEQ2NCAoRGFyd2luIDIwLjMuMCkAAAAAAGQAAAAGAAAAcAAAAAAAAAAZvwUAPM7xYk4AAABOAAAAdIPCb6a48BiYOtvGCABFAABAAABAAEAGTKzAqAUzaBXAG+C/AFA5uK2ZAAAAALAC//9hXwAAAgQFtAEDAwYBAQgKyApXJAAAAAAEAgAAAABwAAAABgAAAGQAAAAAAAAAGb8FAJWb8mJCAAAAQgAAAPAYmDrbxnSDwm+muAgARSgANAAAQAAyBlqQaBXAG8CoBTMAUOC/rbsbeTm4rZqAEv//75YAAAIEBXgBAQQCAQMDCgAAZAAAAAYAAABYAAAAAAAAABm/BQDum/JiNgAAADYAAAB0g8JvprjwGJg628YIAEUAACgAAEAAQAZMxMCoBTNoFcAb4L8AUDm4rZqtuxt6UBAQACAwAAAAAFgAAAAGAAAApAAAAAAAAAAZvwUAcpzyYoEAAACBAAAAdIPCb6a48BiYOtvGCABFAABzAABAAEAGTHnAqAUzaBXAG+C/AFA5uK2arbsbelAYEACo7AAAR0VUIC8gSFRUUC8xLjENCkhvc3Q6IGlmY29uZmlnLmNvDQpVc2VyLUFnZW50OiBjdXJsLzcuNjQuMQ0KQWNjZXB0OiAqLyoNCg0KAAAApAAAAAYAAABcAAAAAAAAABm/BQCIVPNiPAAAADwAAADwGJg628Z0g8JvprgIAEUoACi2qUAAMgaj8mgVwBvAqAUzAFDgv627G3o5uK3lUBAAQC+lAAAAAKz1ZZtcAAAABgAAAGgDAAAAAAAAGb8FAEPY9WJFAwAARQMAAPAYmDrbxnSDwm+muAgARSgDN7aqQAAyBqDiaBXAG8CoBTMAUOC/rbsbejm4reVQGABAORYAAEhUVFAvMS4xIDIwMCBPSw0KRGF0ZTogU2F0LCAwMyBBcHIgMjAyMSAyMjo1NzoxOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD11dGYtOA0KQ29udGVudC1MZW5ndGg6IDE1DQpDb25uZWN0aW9uOiBjbG9zZQ0KU2V0LUNvb2tpZTogX19jZmR1aWQ9ZDlhYjVhYjg0M2I5NTFkNWFiNmY5ZWI0MWQ5Zjk4ZGIyMTYxNzQ5MDYzODsgZXhwaXJlcz1Nb24sIDAzLU1heS0yMSAyMjo1NzoxOCBHTVQ7IHBhdGg9LzsgZG9tYWluPS5pZmNvbmZpZy5jbzsgSHR0cE9ubHk7IFNhbWVTaXRlPUxheA0KQ0YtQ2FjaGUtU3RhdHVzOiBEWU5BTUlDDQpjZi1yZXF1ZXN0LWlkOiAwOTNiOGQ4ZmIwMDAwMDQ5NTUxZjI1MTAwMDAwMDAwMQ0KUmVwb3J0LVRvOiB7Imdyb3VwIjoiY2YtbmVsIiwiZW5kcG9pbnRzIjpbeyJ1cmwiOiJodHRwczpcL1wvYS5uZWwuY2xvdWRmbGFyZS5jb21cL3JlcG9ydD9zPWR3NTZGV3JGN1JYN2JZQ2ttcEpucTh6VkQzVHlIZDQ4MSUyRmlxSjgxQld4SWhZWTFwdkFjS0RVeTFYMW9oZlNmWGN4WkhKTWpvQlljcmxHRjN4OU54enlOMHB4YmxNWEdKeTBZNEp3JTNEJTNEIn1dLCJtYXhfYWdlIjo2MDQ4MDB9DQpORUw6IHsicmVwb3J0X3RvIjoiY2YtbmVsIiwibWF4X2FnZSI6NjA0ODAwfQ0KU2VydmVyOiBjbG91ZGZsYXJlDQpDRi1SQVk6IDYzYTVlNTJjNGJlMzQ5NTUtU1RMDQphbHQtc3ZjOiBoMy0yNz0iOjQ0MyI7IG1hPTg2NDAwLCBoMy0yOD0iOjQ0MyI7IG1hPTg2NDAwLCBoMy0yOT0iOjQ0MyI7IG1hPTg2NDAwDQoNCjE5OS44My4yMjAuMTE1CgAAAGgDAAAGAAAAXAAAAAAAAAAZvwUAStj1YjwAAAA8AAAA8BiYOtvGdIPCb6a4CABFKAAotqtAADIGo/BoFcAbwKgFMwBQ4L+tux6JObit5VARAEAslQAAAABiTwpPXAAAAAYAAABYAAAAAAAAABm/BQCd2PViNgAAADYAAAB0g8JvprjwGJg628YIAEUAACgAAEAAQAZMxMCoBTNoFcAb4L8AUDm4reWtux6JUBAP8xzjAAAAAFgAAAAGAAAAWAAAAAAAAAAZvwUAndj1YjYAAAA2AAAAdIPCb6a48BiYOtvGCABFAAAoAABAAEAGTMTAqAUzaBXAG+C/AFA5uK3lrbseilAQD/Mc4gAAAABYAAAABgAAAFgAAAAAAAAAGb8FAELZ9WI2AAAANgAAAHSDwm+muPAYmDrbxggARQAAKAAAQABABkzEwKgFM2gVwBvgvwBQObit5a27HopQERAAHNQAAAAAWAAAAAYAAABcAAAAAAAAABm/BQCQjfZiPAAAADwAAADwGJg628Z0g8JvprgIAEUoACgAAEAAMgZanGgVwBvAqAUzAFDgv627Hoo5uK3mUBAAQCyUAAAAADaoONVcAAAABQAAAGwAAAAAAAAAGb8FAEVEC2MBABwAQ291bnRlcnMgcHJvdmlkZWQgYnkgZHVtcGNhcAIACAAZvwUAw83gYgMACAAZvwUAHkQLYwQACAAOAAAAAAAAAAUACAAAAAAAAAAAAAAAAABsAAAA
    EOS
    base64_output = pipe_output("base64 --decode", base64_input.chomp)
    pipe_output("#{bin}/zeek -C -r - && test -s conn.log && test -s http.log", base64_output, 0)
  end
end
