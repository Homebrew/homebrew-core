class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://github.com/keploy/keploy/archive/refs/tags/v2.11.3.tar.gz"
  sha256 "033d2e754b8fd0f83c917074c4117cd163e56cbd9bdf27bdf48435254267723e"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "b75dbca29db148ab847219537946a2f7f4c3e7ce0450f926b3fb9a7a9312d033"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "b75dbca29db148ab847219537946a2f7f4c3e7ce0450f926b3fb9a7a9312d033"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "b75dbca29db148ab847219537946a2f7f4c3e7ce0450f926b3fb9a7a9312d033"
    sha256 cellar: :any_skip_relocation, sonoma:        "f5a167491df8a656ac22c8204de56a690b22e542ed4b657f6fd53909ebf9b189"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "fcf9f592c893c650d4ed9b21f98099660e9ee33307de92d2da016ba3e8e34b93"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end
