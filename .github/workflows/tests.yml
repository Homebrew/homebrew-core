name: GitHub Actions CI
on:
  push:
    branches:
      - master
  pull_request:
env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_CHANGE_ARCH_TO_ARM: 1
  HOMEBREW_RELOCATE_RPATHS: 1
jobs:
  tap_syntax:
    if: github.repository == 'Homebrew/homebrew-core'
    runs-on: ubuntu-latest
    outputs:
      syntax-only: ${{ steps.check-labels.outputs.syntax-only }}
      force-arm: ${{ steps.check-labels.outputs.force-arm }}
      test-bot-fail-fast: ${{ steps.check-labels.outputs.test-bot-fail-fast }}
      test-bot-skip-recursive-dependents: ${{ steps.check-labels.outputs.test-bot-skip-recursive-dependents }}
    env:
      HOMEBREW_SIMULATE_MACOS_ON_LINUX: 1
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Bundler RubyGems
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Bundler RubyGems
        run: brew install-bundler-gems

      - run: brew test-bot --only-tap-syntax

      - name: Check for CI labels
        id: check-labels
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { labels: labels } } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            const label_names = labels.map(label => label.name)

            if (label_names.includes('CI-syntax-only')) {
              console.log('CI-syntax-only label found. Skipping tests.')
              console.log('::set-output name=syntax-only::true');
            } else {
              console.log('No CI-syntax-only label found. Running tests.')
              console.log('::set-output name=syntax-only::false');
            }

            if (label_names.includes('CI-force-arm')) {
              console.log('CI-force-arm label found. Running ARM builds.')
              console.log('::set-output name=force-arm::true');
            } else {
              console.log('No CI-force-arm label found. Not requiring ARM builds.')
              console.log('::set-output name=force-arm::false');
            }

            if (label_names.includes('CI-test-bot-fail-fast')) {
              console.log('CI-test-bot-fail-fast label found. Passing --fail-fast to brew test-bot.')
              console.log('::set-output name=test-bot-fail-fast::--fail-fast');
            } else {
              console.log('No CI-test-bot-fail-fast label found. Not passing --fail-fast to brew test-bot.')
              console.log('::set-output name=test-bot-fail-fast::');
            }

            if (label_names.includes('CI-test-bot-skip-recursive-dependents')) {
              console.log('CI-test-bot-skip-recursive-dependents label found. Passing --skip-recursive-dependents to brew test-bot.')
              console.log('::set-output name=test-bot-skip-recursive-dependents::--skip-recursive-dependents');
            } else {
              console.log('No CI-test-bot-skip-recursive-dependents label found. Not passing --skip-recursive-dependents to brew test-bot.')
              console.log('::set-output name=test-bot-skip-recursive-dependents::');
            }

  tests:
    needs: tap_syntax
    if: github.event_name == 'pull_request' && needs.tap_syntax.outputs.syntax-only == 'false'
    strategy:
      matrix:
        os: [[self-hosted, "11-arm64"], [self-hosted, "11"], [self-hosted, "10.15"], [self-hosted, "10.14"], ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 4320
    env:
      HOMEBREW_DEVELOPER: 1
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Set environment variables (macOS)
        if: ${{ matrix.os }} != 'ubuntu-latest'
        run: |
          echo 'PATH=/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"' >> $GITHUB_ENV
          echo 'GITHUB_ACTIONS_HOMEBREW_SELF_HOSTED=1' >> $GITHUB_ENV

      - name: Set environment variables (Linux)
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: |
          echo 'PATH=/home/linuxbrew/.linuxbrew/bin:$PATH' >> $GITHUB_ENV
          echo 'HOMEBREW_CORE_GIT_REMOTE=${{github.event.repository.html_url}}' >> $GITHUB_ENV
          echo 'HOMEBREW_FORCE_HOMEBREW_ON_LINUX=1' >> $GITHUB_ENV

      - name: Check whether ARM tests will be forced
        if: needs.tap_syntax.outputs.force-arm == 'false' && matrix.os != 'ubuntu-latest'
        run: echo 'HOMEBREW_SKIP_UNBOTTLED_ARM_TESTS=1' >> $GITHUB_ENV

      - name: Setup bottles folder
        run: |
          mkdir ~/bottles
          echo $PATH

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Run Docker
        if: matrix.os == 'ubuntu-latest'
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_ANALYTICS: 1
        run: |
          set -eux
          docker run \
            -v /home/linuxbrew:/home/linuxbrew \
            -v ~/bottles:/home/linuxbrew/bottles \
            -u linuxbrew \
            --env-file <(env | grep 'HOMEBREW\|GITHUB') \
            ghcr.io/homebrew/ubuntu16.04:master \
            bash -c 'cd /home/linuxbrew/ && brew test-bot --only-json-tab --only-formulae ${{ needs.tap_syntax.outputs.test-bot-fail-fast }} ${{ needs.tap_syntax.outputs.test-bot-skip-recursive-dependents }}'

      - run: brew test-bot --only-cleanup-before
        if: matrix.os != 'ubuntu-latest'

      - run: rm steps_output.txt
        if: matrix.os != 'ubuntu-latest'

      - run: brew test-bot --only-setup
        if: matrix.os != 'ubuntu-latest'

      - name: Run brew test-bot --only-json-tab --only-formulae ${{ needs.tap_syntax.outputs.test-bot-fail-fast }} ${{ needs.tap_syntax.outputs.test-bot-skip-recursive-dependents }}
        if: matrix.os != 'ubuntu-latest'
        run: |
          cd ~/bottles
          brew test-bot --only-json-tab --only-formulae ${{ needs.tap_syntax.outputs.test-bot-fail-fast }} ${{ needs.tap_syntax.outputs.test-bot-skip-recursive-dependents }}

      - name: Output brew test-bot --only-json-tab --only-formulae ${{ needs.tap_syntax.outputs.test-bot-fail-fast }} ${{ needs.tap_syntax.outputs.test-bot-skip-recursive-dependents }} failures
        if: always()
        run: |
          cat ~/bottles/steps_output.txt
          rm ~/bottles/steps_output.txt

      - name: Output brew bottle result
        if: always()
        run: |
          cat ~/bottles/bottle_output.txt
          rm ~/bottles/bottle_output.txt

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: logs-${{ matrix.os }}
          path: ~/bottles/logs

      - name: Delete logs and home
        if: always()
        run: |
          rm -rvf ~/bottles/logs
          rm -rvf ~/bottles/home

      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd ~/bottles
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"
          failures=$(ls failed/*.json | wc -l | xargs echo -n)
          echo "$failures failed bottles"
          echo "::set-output name=failures::$failures"

      - name: Upload failed bottles
        if: always() && steps.bottles.outputs.failures > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles-${{ matrix.os }}
          path: ~/bottles/failed

      # Must be run before the `Upload bottles` step so that failed
      # bottles are not included in the `bottles` artifact.
      - name: Delete failed bottles
        if: always()
        run: rm -rvf ~/bottles/failed

      - name: Upload bottles
        if: always() && steps.bottles.outputs.count > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: ~/bottles

      - run: brew test-bot --only-cleanup-after
        if: always()

      - name: Post Cleanup
        if: always()
        run: rm -rvf ~/bottles
